{
  "api/Platform.Data.html": {
    "href": "api/Platform.Data.html",
    "title": "Namespace Platform.Data | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data Classes ILinksExtensions Point<TLink> Interfaces ILinks<TLink, TConstants> Представляет интерфейс для работы с данными в формате Links (хранилища взаимосвязей). ISynchronizedLinks<TLink, TLinks, TConstants>"
  },
  "api/Platform.Data.Constants.html": {
    "href": "api/Platform.Data.Constants.html",
    "title": "Namespace Platform.Data.Constants | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Constants Classes LinksCombinedConstants<TDecision, TAddress> LinksCombinedConstants<TDecision, TAddress, TPartIndex> LinksDecisionConstants<TDecision> Interfaces ILinksAddressConstants<TAddress> ILinksCombinedConstants<TDecision, TAddress, TPartIndex, TLinksConstants> ILinksDecisionConstants<TDecision> ILinksPartConstants<TPartIndex>"
  },
  "api/Platform.Data.Constants.ILinksCombinedConstants-4.html": {
    "href": "api/Platform.Data.Constants.ILinksCombinedConstants-4.html",
    "title": "Interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex, TLinksConstants> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex, TLinksConstants> Inherited Members ILinksDecisionConstants<TDecision>.Continue ILinksDecisionConstants<TDecision>.Break ILinksAddressConstants<TAddress>.Null ILinksAddressConstants<TAddress>.Any ILinksAddressConstants<TAddress>.Itself ILinksAddressConstants<TAddress>.MinPossibleIndex ILinksAddressConstants<TAddress>.MaxPossibleIndex ILinksPartConstants<TPartIndex>.IndexPart ILinksPartConstants<TPartIndex>.SourcePart ILinksPartConstants<TPartIndex>.TargetPart Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public interface ILinksCombinedConstants<TDecision, TAddress, TPartIndex, TLinksConstants> : ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> where TLinksConstants : ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> Type Parameters Name Description TDecision TAddress TPartIndex TLinksConstants"
  },
  "api/Platform.Data.Point-1.html": {
    "href": "api/Platform.Data.Point-1.html",
    "title": "Class Point<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Class Point<TLink> Inheritance Object Point<TLink> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public static class Point<TLink> Type Parameters Name Description TLink Methods | Improve this Doc View Source IsFullPoint(TLink[]) Declaration public static bool IsFullPoint(params TLink[] link) Parameters Type Name Description TLink[] link Returns Type Description Boolean | Improve this Doc View Source IsFullPoint(IList<TLink>) Declaration public static bool IsFullPoint(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description Boolean | Improve this Doc View Source IsFullPointUnchecked(IList<TLink>) Declaration public static bool IsFullPointUnchecked(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description Boolean | Improve this Doc View Source IsPartialPoint(TLink[]) Declaration public static bool IsPartialPoint(params TLink[] link) Parameters Type Name Description TLink[] link Returns Type Description Boolean | Improve this Doc View Source IsPartialPoint(IList<TLink>) Declaration public static bool IsPartialPoint(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description Boolean | Improve this Doc View Source IsPartialPointUnchecked(IList<TLink>) Declaration public static bool IsPartialPointUnchecked(IList<TLink> link) Parameters Type Name Description IList <TLink> link Returns Type Description Boolean"
  },
  "api/Platform.Data.Universal.IUniLinks-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinks-1.html",
    "title": "Interface IUniLinks<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinks<TLink> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinks<TLink> Type Parameters Name Description TLink Remarks Minimal sufficient universal Links API (for bulk operations). Methods | Improve this Doc View Source Count(IList<TLink>) Declaration TLink Count(IList<TLink> restrictions) Parameters Type Name Description IList <TLink> restrictions Returns Type Description TLink Remarks Something simple should be simple and optimized. | Improve this Doc View Source Trigger(IList<TLink>, IList<TLink>) Declaration IList<IList<IList<TLink>>> Trigger(IList<TLink> condition, IList<TLink> substitution) Parameters Type Name Description IList <TLink> condition IList <TLink> substitution Returns Type Description IList < IList < IList <TLink>>> | Improve this Doc View Source Trigger(IList<TLink>, Func<IList<TLink>, TLink>, IList<TLink>, Func<IList<TLink>, IList<TLink>, TLink>) Declaration TLink Trigger(IList<TLink> patternOrCondition, Func<IList<TLink>, TLink> matchHandler, IList<TLink> substitution, Func<IList<TLink>, IList<TLink>, TLink> substitutionHandler) Parameters Type Name Description IList <TLink> patternOrCondition Func < IList <TLink>, TLink> matchHandler IList <TLink> substitution Func < IList <TLink>, IList <TLink>, TLink> substitutionHandler Returns Type Description TLink TLink that represents True (was finished fully) or TLink that represents False (was stopped). This is done to assure ability to push up stop signal through recursion stack. Remarks { 0, 0, 0 } => { itself, itself, itself } // create { 1, any, any } => { itself, any, 3 } // update { 3, any, any } => { 0, 0, 0 } // delete | Improve this Doc View Source Trigger(IList<TLink>, Func<IList<TLink>, IList<TLink>, TLink>, IList<TLink>, Func<IList<TLink>, IList<TLink>, TLink>) Declaration TLink Trigger(IList<TLink> restriction, Func<IList<TLink>, IList<TLink>, TLink> matchedHandler, IList<TLink> substitution, Func<IList<TLink>, IList<TLink>, TLink> substitutedHandler) Parameters Type Name Description IList <TLink> restriction Func < IList <TLink>, IList <TLink>, TLink> matchedHandler IList <TLink> substitution Func < IList <TLink>, IList <TLink>, TLink> substitutedHandler Returns Type Description TLink"
  },
  "api/Platform.Data.Universal.html": {
    "href": "api/Platform.Data.Universal.html",
    "title": "Namespace Platform.Data.Universal | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Universal Interfaces IUniLinks<TLink> IUniLinksCRUD<TLink> IUniLinksGS<TLink> IUniLinksIO<TLink> IUniLinksIOWithExtensions<TLink> IUniLinksRW<TLink>"
  },
  "api/Platform.Data.Exceptions.ArgumentLinkDoesNotExistsException-1.html": {
    "href": "api/Platform.Data.Exceptions.ArgumentLinkDoesNotExistsException-1.html",
    "title": "Class ArgumentLinkDoesNotExistsException<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Class ArgumentLinkDoesNotExistsException<TLink> Inheritance Object Exception SystemException ArgumentException ArgumentLinkDoesNotExistsException<TLink> Implements ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class ArgumentLinkDoesNotExistsException<TLink> : ArgumentException, ISerializable Type Parameters Name Description TLink Constructors | Improve this Doc View Source ArgumentLinkDoesNotExistsException(TLink) Declaration public ArgumentLinkDoesNotExistsException(TLink link) Parameters Type Name Description TLink link | Improve this Doc View Source ArgumentLinkDoesNotExistsException(TLink, String) Declaration public ArgumentLinkDoesNotExistsException(TLink link, string paramName) Parameters Type Name Description TLink link String paramName Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Platform.Data.Sequences.ISequenceWalker-1.html": {
    "href": "api/Platform.Data.Sequences.ISequenceWalker-1.html",
    "title": "Interface ISequenceWalker<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ISequenceWalker<TLink> Namespace : Platform.Data.Sequences Assembly : Platform.Data.dll Syntax public interface ISequenceWalker<TLink> Type Parameters Name Description TLink Methods | Improve this Doc View Source Walk(TLink) Declaration IEnumerable<IList<TLink>> Walk(TLink sequence) Parameters Type Name Description TLink sequence Returns Type Description IEnumerable < IList <TLink>>"
  },
  "api/Platform.Data.Exceptions.ArgumentLinkHasDependenciesException-1.html": {
    "href": "api/Platform.Data.Exceptions.ArgumentLinkHasDependenciesException-1.html",
    "title": "Class ArgumentLinkHasDependenciesException<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Class ArgumentLinkHasDependenciesException<TLink> Inheritance Object Exception SystemException ArgumentException ArgumentLinkHasDependenciesException<TLink> Implements ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class ArgumentLinkHasDependenciesException<TLink> : ArgumentException, ISerializable Type Parameters Name Description TLink Constructors | Improve this Doc View Source ArgumentLinkHasDependenciesException(TLink) Declaration public ArgumentLinkHasDependenciesException(TLink link) Parameters Type Name Description TLink link | Improve this Doc View Source ArgumentLinkHasDependenciesException(TLink, String) Declaration public ArgumentLinkHasDependenciesException(TLink link, string paramName) Parameters Type Name Description TLink link String paramName Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Platform.Data.ILinksExtensions.html": {
    "href": "api/Platform.Data.ILinksExtensions.html",
    "title": "Class ILinksExtensions | LinksPlatform's Platform.Data Library",
    "keywords": "Class ILinksExtensions Inheritance Object ILinksExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public static class ILinksExtensions Methods | Improve this Doc View Source Count<TLink, TConstants>(ILinks<TLink, TConstants>, TLink[]) Declaration public static TLink Count<TLink, TConstants>(this ILinks<TLink, TConstants> links, params TLink[] restrictions) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links TLink[] restrictions Returns Type Description TLink Type Parameters Name Description TLink TConstants | Improve this Doc View Source Each<TLink, TConstants>(ILinks<TLink, TConstants>, Func<IList<TLink>, TLink>, TLink[]) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static TLink Each<TLink, TConstants>(this ILinks<TLink, TConstants> links, Func<IList<TLink>, TLink> handler, params TLink[] restrictions) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. Func < IList <TLink>, TLink> handler Обработчик каждой подходящей связи. TLink[] restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный индекс связи. Returns Type Description TLink True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLink TConstants | Improve this Doc View Source EnsureLinkExists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) Declaration public static void EnsureLinkExists<TLink, TConstants>(this ILinks<TLink, TConstants> links, TLink link) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. TLink link Индекс проверяемой на существование связи. Type Parameters Name Description TLink TConstants Remarks TODO: May be move to EnsureExtensions or make it both there and here | Improve this Doc View Source EnsureLinkExists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink, String) Declaration public static void EnsureLinkExists<TLink, TConstants>(this ILinks<TLink, TConstants> links, TLink link, string argumentName) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. TLink link Индекс проверяемой на существование связи. String argumentName Имя аргумента, в который передаётся индекс связи. Type Parameters Name Description TLink TConstants | Improve this Doc View Source Exists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) Возвращает значение, определяющее существует ли связь с указанным индексом в хранилище связей. Declaration public static bool Exists<TLink, TConstants>(this ILinks<TLink, TConstants> links, TLink link) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. TLink link Индекс проверяемой на существование связи. Returns Type Description Boolean Значение, определяющее существует ли связь. Type Parameters Name Description TLink TConstants | Improve this Doc View Source GetLink<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) Возвращает части-значения для связи с указанным индексом. Declaration public static IList<TLink> GetLink<TLink, TConstants>(this ILinks<TLink, TConstants> links, TLink link) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. TLink link Индекс связи. Returns Type Description IList <TLink> Уникальную связь. Type Parameters Name Description TLink TConstants | Improve this Doc View Source IsFullPoint<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) Возвращает значение, определяющее является ли связь с указанным индексом точкой полностью (связью замкнутой на себе дважды). Declaration public static bool IsFullPoint<TLink, TConstants>(this ILinks<TLink, TConstants> links, TLink link) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. TLink link Индекс проверяемой связи. Returns Type Description Boolean Значение, определяющее является ли связь точкой полностью. Type Parameters Name Description TLink TConstants Remarks Связь точка - это связь, у которой начало (Source) и конец (Target) есть сама эта связь. Но что, если точка уже есть, а нужно создать пару с таким же значением? Должны ли точка и пара существовать одновременно? Или в качестве решения для точек нужно использовать 0 в качестве начала и конца, а сортировать по индексу в массиве связей? Какое тогда будет значение Source и Target у точки? 0 или её индекс? Или точка должна быть одновременно точкой и парой, а также последовательностями из самой себя любого размера? Как только есть ссылка на себя, появляется этот парадокс, причём достаточно даже одной ссылки на себя (частичной точки). А что если не выбирать что является точкой, пара нулей (цикл через пустоту) или самостоятельный цикл через себя? Что если предоставить все варианты использования связей? Что если разрешить и нули, а так же частичные варианты? Что если точка, это только в том случае когда link.Source == link && link.Target == link , т.е. дважды ссылка на себя. А пара это тогда, когда link.Source == link.Target && link.Source != link , т.е. ссылка не на себя а во вне. Тогда если у нас уже создана пара, но нам нужна точка, мы можем используя промежуточную связь, например \"DoubletOf\" обозначить что является точно парой, а что точно точкой. И наоборот этот же метод поможет, если уже существует точка, но нам нужна пара. | Improve this Doc View Source IsPartialPoint<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) Возвращает значение, определяющее является ли связь с указанным индексом точкой частично (связью замкнутой на себе как минимум один раз). Declaration public static bool IsPartialPoint<TLink, TConstants>(this ILinks<TLink, TConstants> links, TLink link) where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Parameters Type Name Description ILinks <TLink, TConstants> links Хранилище связей. TLink link Индекс проверяемой связи. Returns Type Description Boolean Значение, определяющее является ли связь точкой частично. Type Parameters Name Description TLink TConstants Remarks Достаточно любой одной ссылки на себя. Также в будущем можно будет проверять и всех родителей, чтобы проверить есть ли ссылки на себя (на эту связь)."
  },
  "api/Platform.Data.Universal.IUniLinksIOWithExtensions-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksIOWithExtensions-1.html",
    "title": "Interface IUniLinksIOWithExtensions<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksIOWithExtensions<TLink> Inherited Members IUniLinksIO<TLink>.Out(Func<TLink[], Boolean>, TLink[]) IUniLinksIO<TLink>.In(TLink[], TLink[]) Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksIOWithExtensions<TLink> : IUniLinksIO<TLink> Type Parameters Name Description TLink Remarks Contains some optimizations of Out. Methods | Improve this Doc View Source OutAll(TLink[]) Declaration TLink[][] OutAll(params TLink[] pattern) Parameters Type Name Description TLink[] pattern Returns Type Description TLink[][] Remarks OutCount() returns total links in store as array. | Improve this Doc View Source OutCount(TLink[]) Declaration ulong OutCount(params TLink[] pattern) Parameters Type Name Description TLink[] pattern Returns Type Description UInt64 Remarks OutCount() returns total amount of links in store. | Improve this Doc View Source OutOne(UInt64, TLink[]) Declaration TLink OutOne(ulong partType, params TLink[] pattern) Parameters Type Name Description UInt64 partType TLink[] pattern Returns Type Description TLink Remarks default(TLink) means nothing or null. Single element pattern means just element (link). OutPart(n, null) returns default(TLink). OutPart(0, pattern) ~ Exists(link) or Search(pattern) OutPart(1, pattern) ~ GetSource(link) or GetSource(Search(pattern)) OutPart(2, pattern) ~ GetTarget(link) or GetTarget(Search(pattern)) OutPart(3, pattern) ~ GetLinker(link) or GetLinker(Search(pattern)) OutPart(n, pattern) => For any variable length links, returns link or default(TLink). Outs(returns) inner contents of link, its part/parent/element/value."
  },
  "api/Platform.Data.Constants.ILinksAddressConstants-1.html": {
    "href": "api/Platform.Data.Constants.ILinksAddressConstants-1.html",
    "title": "Interface ILinksAddressConstants<TAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ILinksAddressConstants<TAddress> Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public interface ILinksAddressConstants<out TAddress> Type Parameters Name Description TAddress Properties | Improve this Doc View Source Any Возвращает значение, обозначающее любую связь. Declaration TAddress Any { get; } Property Value Type Description TAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. | Improve this Doc View Source Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration TAddress Itself { get; } Property Value Type Description TAddress | Improve this Doc View Source MaxPossibleIndex Возвращает максимально возможный индекс существующей связи. Declaration TAddress MaxPossibleIndex { get; } Property Value Type Description TAddress Remarks Если за каждую константу будет отвечать отдельная связь, диапазон возможных связей будет уменьшен. Благодаря логике конвертации Integer для каждого типа здесь будет максимальное значение этого типа. | Improve this Doc View Source MinPossibleIndex Возвращает минимально возможный индекс существующей связи. Declaration TAddress MinPossibleIndex { get; } Property Value Type Description TAddress | Improve this Doc View Source Null Возвращает значение, обозначающее отсутствие связи. Declaration TAddress Null { get; } Property Value Type Description TAddress"
  },
  "api/Platform.Data.Exceptions.html": {
    "href": "api/Platform.Data.Exceptions.html",
    "title": "Namespace Platform.Data.Exceptions | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Exceptions Classes ArgumentLinkDoesNotExistsException<TLink> ArgumentLinkHasDependenciesException<TLink> LinksLimitReachedException LinkWithSameValueAlreadyExistsException"
  },
  "api/Platform.Data.ISynchronizedLinks-3.html": {
    "href": "api/Platform.Data.ISynchronizedLinks-3.html",
    "title": "Interface ISynchronizedLinks<TLink, TLinks, TConstants> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ISynchronizedLinks<TLink, TLinks, TConstants> Inherited Members Platform.Threading.Synchronization.ISynchronized<TLinks>.SyncRoot Platform.Threading.Synchronization.ISynchronized<TLinks>.Unsync Platform.Threading.Synchronization.ISynchronized<TLinks>.Sync ILinks<TLink, TConstants>.Constants ILinks<TLink, TConstants>.Count(IList<TLink>) ILinks<TLink, TConstants>.Each(Func<IList<TLink>, TLink>, IList<TLink>) ILinks<TLink, TConstants>.Create() ILinks<TLink, TConstants>.Update(IList<TLink>) ILinks<TLink, TConstants>.Delete(TLink) Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public interface ISynchronizedLinks<TLink, TLinks, TConstants> : ISynchronized<TLinks>, ILinks<TLink, TConstants> where TLinks : ILinks<TLink, TConstants> where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Type Parameters Name Description TLink TLinks TConstants Extension Methods ILinksExtensions.Count<TLink, TConstants>(ILinks<TLink, TConstants>, TLink[]) ILinksExtensions.Exists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.EnsureLinkExists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.EnsureLinkExists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink, String) ILinksExtensions.Each<TLink, TConstants>(ILinks<TLink, TConstants>, Func<IList<TLink>, TLink>, TLink[]) ILinksExtensions.GetLink<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.IsFullPoint<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.IsPartialPoint<TLink, TConstants>(ILinks<TLink, TConstants>, TLink)"
  },
  "api/Platform.Data.Constants.LinksCombinedConstants-3.html": {
    "href": "api/Platform.Data.Constants.LinksCombinedConstants-3.html",
    "title": "Class LinksCombinedConstants<TDecision, TAddress, TPartIndex> | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksCombinedConstants<TDecision, TAddress, TPartIndex> Inheritance Object LinksDecisionConstants <TDecision> LinksCombinedConstants <TDecision, TAddress> LinksCombinedConstants<TDecision, TAddress, TPartIndex> Implements ILinksCombinedConstants <TDecision, TAddress, TPartIndex, LinksCombinedConstants <TDecision, TAddress, TPartIndex>> ILinksDecisionConstants <TDecision> ILinksAddressConstants <TAddress> ILinksPartConstants <TPartIndex> Inherited Members LinksCombinedConstants<TDecision, TAddress>.Null LinksCombinedConstants<TDecision, TAddress>.Any LinksCombinedConstants<TDecision, TAddress>.Itself LinksCombinedConstants<TDecision, TAddress>.MinPossibleIndex LinksCombinedConstants<TDecision, TAddress>.MaxPossibleIndex LinksDecisionConstants<TDecision>.Continue LinksDecisionConstants<TDecision>.Break Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public class LinksCombinedConstants<TDecision, TAddress, TPartIndex> : LinksCombinedConstants<TDecision, TAddress>, ILinksCombinedConstants<TDecision, TAddress, TPartIndex, LinksCombinedConstants<TDecision, TAddress, TPartIndex>>, ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress>, ILinksPartConstants<TPartIndex> Type Parameters Name Description TDecision TAddress TPartIndex Properties | Improve this Doc View Source IndexPart Declaration public TPartIndex IndexPart { get; } Property Value Type Description TPartIndex | Improve this Doc View Source SourcePart Declaration public TPartIndex SourcePart { get; } Property Value Type Description TPartIndex | Improve this Doc View Source TargetPart Declaration public TPartIndex TargetPart { get; } Property Value Type Description TPartIndex Implements ILinksCombinedConstants<TDecision, TAddress, TPartIndex, TLinksConstants> ILinksDecisionConstants<TDecision> ILinksAddressConstants<TAddress> ILinksPartConstants<TPartIndex>"
  },
  "api/Platform.Data.Universal.IUniLinksCRUD-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksCRUD-1.html",
    "title": "Interface IUniLinksCRUD<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksCRUD<TLink> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksCRUD<TLink> Type Parameters Name Description TLink Remarks CRUD aliases for IUniLinks. Methods | Improve this Doc View Source Create(TLink[]) Declaration TLink Create(TLink[] parts) Parameters Type Name Description TLink[] parts Returns Type Description TLink | Improve this Doc View Source Delete(TLink[]) Declaration void Delete(TLink[] parts) Parameters Type Name Description TLink[] parts | Improve this Doc View Source Read(Func<TLink, Boolean>, TLink[]) Declaration bool Read(Func<TLink, bool> handler, params TLink[] pattern) Parameters Type Name Description Func <TLink, Boolean > handler TLink[] pattern Returns Type Description Boolean | Improve this Doc View Source Read(UInt64, TLink) Declaration TLink Read(ulong partType, TLink link) Parameters Type Name Description UInt64 partType TLink link Returns Type Description TLink | Improve this Doc View Source Update(TLink[], TLink[]) Declaration TLink Update(TLink[] before, TLink[] after) Parameters Type Name Description TLink[] before TLink[] after Returns Type Description TLink"
  },
  "api/Platform.Data.Sequences.html": {
    "href": "api/Platform.Data.Sequences.html",
    "title": "Namespace Platform.Data.Sequences | LinksPlatform's Platform.Data Library",
    "keywords": "Namespace Platform.Data.Sequences Classes SequenceWalker StopableSequenceWalker Interfaces ISequenceAppender<TLink> ISequences<TLink> ISequenceWalker<TLink>"
  },
  "api/Platform.Data.Constants.ILinksPartConstants-1.html": {
    "href": "api/Platform.Data.Constants.ILinksPartConstants-1.html",
    "title": "Interface ILinksPartConstants<TPartIndex> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ILinksPartConstants<TPartIndex> Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public interface ILinksPartConstants<out TPartIndex> Type Parameters Name Description TPartIndex Properties | Improve this Doc View Source IndexPart Возвращает индекс части, которая отвечает за индекс (адрес, идентификатор) самой связи. Declaration TPartIndex IndexPart { get; } Property Value Type Description TPartIndex | Improve this Doc View Source SourcePart Возвращает индекс части, которая отвечает за ссылку на связь-начало (первая часть-значение). Declaration TPartIndex SourcePart { get; } Property Value Type Description TPartIndex | Improve this Doc View Source TargetPart Возвращает индекс части, которая отвечает за ссылку на связь-конец (последняя часть-значение). Declaration TPartIndex TargetPart { get; } Property Value Type Description TPartIndex"
  },
  "api/Platform.Data.Universal.IUniLinksIO-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksIO-1.html",
    "title": "Interface IUniLinksIO<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksIO<TLink> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksIO<TLink> Type Parameters Name Description TLink Remarks In/Out aliases for IUniLinks. TLink can be any number type of any size. Methods | Improve this Doc View Source In(TLink[], TLink[]) Declaration TLink In(TLink[] before, TLink[] after) Parameters Type Name Description TLink[] before TLink[] after Returns Type Description TLink Remarks default(TLink) means itself. Equivalent to: creation if before == null deletion if after == null update if before != null && after != null default(TLink) if before == null && after == null Possible interpretation In(null, new[] { }) creates point (link that points to itself using minimum number of parts). In(new[] { 4 }, null) deletes 4th link. In(new[] { 4 }, new [] { 5 }) delete 5th link if it exists and moves 4th link to 5th index. In(new[] { 4 }, new [] { 0, 2, 3 }) replaces 4th link with new doublet link (with 2 as source and 3 as target), 0 means it can be placed in any address. ... | Improve this Doc View Source Out(Func<TLink[], Boolean>, TLink[]) Declaration bool Out(Func<TLink[], bool> handler, params TLink[] pattern) Parameters Type Name Description Func <TLink[], Boolean > handler TLink[] pattern Returns Type Description Boolean Remarks default(TLink) means any link. Single element pattern means just element (link). Handler gets array of link contents. link[0] is index or identifier. link[1] is source or first. link[2] is target or second. link[3] is linker or third. link[n] is nth part/parent/element/value of link (if variable length links used). Stops and returns false if handler return false. Acts as Each, Foreach, Select, Search, Match & ... Handles all links in store if pattern/restrictions is not defined."
  },
  "api/Platform.Data.Constants.LinksDecisionConstants-1.html": {
    "href": "api/Platform.Data.Constants.LinksDecisionConstants-1.html",
    "title": "Class LinksDecisionConstants<TDecision> | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksDecisionConstants<TDecision> Inheritance Object LinksDecisionConstants<TDecision> LinksCombinedConstants<TDecision, TAddress> Implements ILinksDecisionConstants <TDecision> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public class LinksDecisionConstants<TDecision> : ILinksDecisionConstants<TDecision> Type Parameters Name Description TDecision Remarks Возможно каждая константа должна иметь своё уникальное значение (которое можно отсчитывать от конца доступных значений), например (ulong.MaxValue - 1) и т.п. Properties | Improve this Doc View Source Break Возвращает булевское значение, обозначающее остановку прохода по связям. Declaration public TDecision Break { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. | Improve this Doc View Source Continue Возвращает булевское значение, обозначающее продолжение прохода по связям. Declaration public TDecision Continue { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. Implements ILinksDecisionConstants<TDecision>"
  },
  "api/Platform.Data.Constants.ILinksDecisionConstants-1.html": {
    "href": "api/Platform.Data.Constants.ILinksDecisionConstants-1.html",
    "title": "Interface ILinksDecisionConstants<TDecision> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ILinksDecisionConstants<TDecision> Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public interface ILinksDecisionConstants<out TDecision> Type Parameters Name Description TDecision Properties | Improve this Doc View Source Break Возвращает булевское значение, обозначающее остановку прохода по связям. Declaration TDecision Break { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each. | Improve this Doc View Source Continue Возвращает булевское значение, обозначающее продолжение прохода по связям. Declaration TDecision Continue { get; } Property Value Type Description TDecision Remarks Используется в функции обработчике, который передаётся в функцию Each."
  },
  "api/Platform.Data.Sequences.ISequenceAppender-1.html": {
    "href": "api/Platform.Data.Sequences.ISequenceAppender-1.html",
    "title": "Interface ISequenceAppender<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ISequenceAppender<TLink> Namespace : Platform.Data.Sequences Assembly : Platform.Data.dll Syntax public interface ISequenceAppender<TLink> Type Parameters Name Description TLink Methods | Improve this Doc View Source Append(TLink, TLink) Declaration TLink Append(TLink sequence, TLink appendant) Parameters Type Name Description TLink sequence TLink appendant Returns Type Description TLink"
  },
  "README.html": {
    "href": "README.html",
    "title": "Data | LinksPlatform's Platform.Data Library",
    "keywords": "Data LinksPlatform's Platform.Data Class Library. Namespace: Platform.Data Forked from: Konard/LinksPlatform/Platform/Platform.Data NuGet package: Platform.Data Documentation Interface ILinks<TLink, TConstants> . PDF file with code for e-readers. Depend on Platform.Threading Platform.Numbers Platform.Setters Dependent libraries Platform.Data.Doublets Platform.Data.Triplets Mystery files .travis.yml - Travis CI build configuration. docfx.json and toc.yml - DocFX build configuration. format-document.sh - script for formating tex file for generating PDF from it. format-csharp-files.py - script for formating single .cs file as a part of tex file. generate-pdf.sh - script that generates PDF with code for e-readers. publish-docs.sh - script that publishes generated documentation and PDF with code for e-readers to gh-pages branch. push-nuget.bat - Windows script for publishing current version of NuGet package."
  },
  "api/Platform.Data.Exceptions.LinksLimitReachedException.html": {
    "href": "api/Platform.Data.Exceptions.LinksLimitReachedException.html",
    "title": "Class LinksLimitReachedException | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksLimitReachedException Inheritance Object Exception LinksLimitReachedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class LinksLimitReachedException : Exception, ISerializable Constructors | Improve this Doc View Source LinksLimitReachedException() Declaration public LinksLimitReachedException() | Improve this Doc View Source LinksLimitReachedException(String) Declaration public LinksLimitReachedException(string message) Parameters Type Name Description String message | Improve this Doc View Source LinksLimitReachedException(UInt64) Declaration public LinksLimitReachedException(ulong limit) Parameters Type Name Description UInt64 limit Fields | Improve this Doc View Source DefaultMessage Declaration public static readonly string DefaultMessage Field Value Type Description String Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Platform.Data.Exceptions.LinkWithSameValueAlreadyExistsException.html": {
    "href": "api/Platform.Data.Exceptions.LinkWithSameValueAlreadyExistsException.html",
    "title": "Class LinkWithSameValueAlreadyExistsException | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinkWithSameValueAlreadyExistsException Inheritance Object Exception LinkWithSameValueAlreadyExistsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Exceptions Assembly : Platform.Data.dll Syntax public class LinkWithSameValueAlreadyExistsException : Exception, ISerializable Constructors | Improve this Doc View Source LinkWithSameValueAlreadyExistsException() Declaration public LinkWithSameValueAlreadyExistsException() | Improve this Doc View Source LinkWithSameValueAlreadyExistsException(String) Declaration public LinkWithSameValueAlreadyExistsException(string message) Parameters Type Name Description String message Fields | Improve this Doc View Source DefaultMessage Declaration public static readonly string DefaultMessage Field Value Type Description String Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Platform.Data.ILinks-2.html": {
    "href": "api/Platform.Data.ILinks-2.html",
    "title": "Interface ILinks<TLink, TConstants> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ILinks<TLink, TConstants> Представляет интерфейс для работы с данными в формате Links (хранилища взаимосвязей). Namespace : Platform.Data Assembly : Platform.Data.dll Syntax public interface ILinks<TLink, TConstants> where TConstants : ILinksCombinedConstants<TLink, TLink, int, TConstants> Type Parameters Name Description TLink TConstants Remarks Этот интерфейс в данный момент не зависит от размера содержимого связи, а значит подходит как для дуплетов, так и для триплетов и т.п. Возможно этот интерфейс подходит даже для Sequences. Properties | Improve this Doc View Source Constants Возвращает набор констант, который необходим для эффективной коммуникации с методами этого интерфейса. Эти константы не меняются с момента создания точки доступа к хранилищу. Declaration TConstants Constants { get; } Property Value Type Description TConstants Methods | Improve this Doc View Source Count(IList<TLink>) Подсчитывает и возвращает общее число связей находящихся в хранилище, соответствующих указанным ограничениям. Declaration TLink Count(IList<TLink> restriction) Parameters Type Name Description IList <TLink> restriction Ограничения на содержимое связей. Returns Type Description TLink Общее число связей находящихся в хранилище, соответствующих указанным ограничениям. | Improve this Doc View Source Create() Создаёт связь. Declaration TLink Create() Returns Type Description TLink Индекс созданной связи. | Improve this Doc View Source Delete(TLink) Удаляет связь с указанным индексом. Declaration void Delete(TLink link) Parameters Type Name Description TLink link Индекс удаляемой связи. | Improve this Doc View Source Each(Func<IList<TLink>, TLink>, IList<TLink>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration TLink Each(Func<IList<TLink>, TLink> handler, IList<TLink> restrictions) Parameters Type Name Description Func < IList <TLink>, TLink> handler Обработчик каждой подходящей связи. IList <TLink> restrictions Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный индекс связи. Returns Type Description TLink True, в случае если проход по связям не был прерван и False в обратном случае. | Improve this Doc View Source Update(IList<TLink>) Обновляет связь с указанными restrictions[Constants.IndexPart] в адресом связи на связь с указанным новым содержимым. Declaration TLink Update(IList<TLink> restrictions) Parameters Type Name Description IList <TLink> restrictions Ограничения на содержимое связей. Предполагается, что будет указан индекс связи (в restrictions[Constants.IndexPart]) и далее за ним будет следовать содержимое связи. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Constants.Itself - требование установить ссылку на себя, 1..∞ конкретный индекс другой связи. Returns Type Description TLink Индекс обновлённой связи. Extension Methods ILinksExtensions.Count<TLink, TConstants>(ILinks<TLink, TConstants>, TLink[]) ILinksExtensions.Exists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.EnsureLinkExists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.EnsureLinkExists<TLink, TConstants>(ILinks<TLink, TConstants>, TLink, String) ILinksExtensions.Each<TLink, TConstants>(ILinks<TLink, TConstants>, Func<IList<TLink>, TLink>, TLink[]) ILinksExtensions.GetLink<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.IsFullPoint<TLink, TConstants>(ILinks<TLink, TConstants>, TLink) ILinksExtensions.IsPartialPoint<TLink, TConstants>(ILinks<TLink, TConstants>, TLink)"
  },
  "api/Platform.Data.Universal.IUniLinksRW-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksRW-1.html",
    "title": "Interface IUniLinksRW<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksRW<TLink> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksRW<TLink> Type Parameters Name Description TLink Remarks Read/Write aliases for IUniLinks. Methods | Improve this Doc View Source Read(Func<TLink, Boolean>, TLink[]) Declaration bool Read(Func<TLink, bool> handler, params TLink[] pattern) Parameters Type Name Description Func <TLink, Boolean > handler TLink[] pattern Returns Type Description Boolean | Improve this Doc View Source Read(UInt64, TLink) Declaration TLink Read(ulong partType, TLink link) Parameters Type Name Description UInt64 partType TLink link Returns Type Description TLink | Improve this Doc View Source Write(TLink[], TLink[]) Declaration TLink Write(TLink[] before, TLink[] after) Parameters Type Name Description TLink[] before TLink[] after Returns Type Description TLink"
  },
  "api/Platform.Data.Universal.IUniLinksGS-1.html": {
    "href": "api/Platform.Data.Universal.IUniLinksGS-1.html",
    "title": "Interface IUniLinksGS<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface IUniLinksGS<TLink> Namespace : Platform.Data.Universal Assembly : Platform.Data.dll Syntax public interface IUniLinksGS<TLink> Type Parameters Name Description TLink Remarks Get/Set aliases for IUniLinks. Methods | Improve this Doc View Source Get(Func<TLink, Boolean>, TLink[]) Declaration bool Get(Func<TLink, bool> handler, params TLink[] pattern) Parameters Type Name Description Func <TLink, Boolean > handler TLink[] pattern Returns Type Description Boolean | Improve this Doc View Source Get(UInt64, TLink) Declaration TLink Get(ulong partType, TLink link) Parameters Type Name Description UInt64 partType TLink link Returns Type Description TLink | Improve this Doc View Source Set(TLink[], TLink[]) Declaration TLink Set(TLink[] before, TLink[] after) Parameters Type Name Description TLink[] before TLink[] after Returns Type Description TLink"
  },
  "api/Platform.Data.Sequences.StopableSequenceWalker.html": {
    "href": "api/Platform.Data.Sequences.StopableSequenceWalker.html",
    "title": "Class StopableSequenceWalker | LinksPlatform's Platform.Data Library",
    "keywords": "Class StopableSequenceWalker Inheritance Object StopableSequenceWalker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Sequences Assembly : Platform.Data.dll Syntax public static class StopableSequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. При оптимизации можно использовать встроенную поддержку стеков в процессор. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). Methods | Improve this Doc View Source WalkLeft<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkLeft<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, Boolean > isElement Func <TLink, Boolean > visit Returns Type Description Boolean Type Parameters Name Description TLink | Improve this Doc View Source WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>, Action<TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> enter, Action<TLink> exit, Func<TLink, bool> canEnter, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, Boolean > isElement Action <TLink> enter Action <TLink> exit Func <TLink, Boolean > canEnter Func <TLink, Boolean > visit Returns Type Description Boolean Type Parameters Name Description TLink | Improve this Doc View Source WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Func<TLink, Boolean>) Declaration public static bool WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Func<TLink, bool> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, Boolean > isElement Func <TLink, Boolean > visit Returns Type Description Boolean Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Constants.LinksCombinedConstants-2.html": {
    "href": "api/Platform.Data.Constants.LinksCombinedConstants-2.html",
    "title": "Class LinksCombinedConstants<TDecision, TAddress> | LinksPlatform's Platform.Data Library",
    "keywords": "Class LinksCombinedConstants<TDecision, TAddress> Inheritance Object LinksDecisionConstants <TDecision> LinksCombinedConstants<TDecision, TAddress> LinksCombinedConstants<TDecision, TAddress, TPartIndex> Implements ILinksDecisionConstants <TDecision> ILinksAddressConstants <TAddress> Inherited Members LinksDecisionConstants<TDecision>.Continue LinksDecisionConstants<TDecision>.Break Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Constants Assembly : Platform.Data.dll Syntax public class LinksCombinedConstants<TDecision, TAddress> : LinksDecisionConstants<TDecision>, ILinksDecisionConstants<TDecision>, ILinksAddressConstants<TAddress> Type Parameters Name Description TDecision TAddress Constructors | Improve this Doc View Source LinksCombinedConstants() Declaration public LinksCombinedConstants() Properties | Improve this Doc View Source Any Возвращает значение, обозначающее любую связь. Declaration public TAddress Any { get; } Property Value Type Description TAddress Remarks Возможно нужно зарезервировать отдельное значение, тогда можно будет создавать все варианты последовательностей в функции Create. | Improve this Doc View Source Itself Возвращает значение, обозначающее связь-ссылку на саму связь. Declaration public TAddress Itself { get; } Property Value Type Description TAddress | Improve this Doc View Source MaxPossibleIndex Возвращает максимально возможный индекс существующей связи. Declaration public TAddress MaxPossibleIndex { get; } Property Value Type Description TAddress Remarks Если за каждую константу будет отвечать отдельная связь, диапазон возможных связей будет уменьшен. Благодаря логике конвертации Integer для каждого типа здесь будет максимальное значение этого типа. | Improve this Doc View Source MinPossibleIndex Возвращает минимально возможный индекс существующей связи. Declaration public TAddress MinPossibleIndex { get; } Property Value Type Description TAddress | Improve this Doc View Source Null Возвращает значение, обозначающее отсутствие связи. Declaration public TAddress Null { get; } Property Value Type Description TAddress Implements ILinksDecisionConstants<TDecision> ILinksAddressConstants<TAddress>"
  },
  "api/Platform.Data.Sequences.SequenceWalker.html": {
    "href": "api/Platform.Data.Sequences.SequenceWalker.html",
    "title": "Class SequenceWalker | LinksPlatform's Platform.Data Library",
    "keywords": "Class SequenceWalker Inheritance Object SequenceWalker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Sequences Assembly : Platform.Data.dll Syntax public static class SequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. При оптимизации можно использовать встроенную поддержку стеков в процессор. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). TODO: Попробовать реализовать алгоритм используя Sigil (MSIL) и низкоуровневый стек и сравнить производительность. Methods | Improve this Doc View Source WalkLeft<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>) Declaration public static void WalkLeft<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, Boolean > isElement Action <TLink> visit Type Parameters Name Description TLink | Improve this Doc View Source WalkRight<TLink>(TLink, Func<TLink, TLink>, Func<TLink, TLink>, Func<TLink, Boolean>, Action<TLink>) Declaration public static void WalkRight<TLink>(TLink sequence, Func<TLink, TLink> getSource, Func<TLink, TLink> getTarget, Func<TLink, bool> isElement, Action<TLink> visit) Parameters Type Name Description TLink sequence Func <TLink, TLink> getSource Func <TLink, TLink> getTarget Func <TLink, Boolean > isElement Action <TLink> visit Type Parameters Name Description TLink"
  },
  "api/Platform.Data.Sequences.ISequences-1.html": {
    "href": "api/Platform.Data.Sequences.ISequences-1.html",
    "title": "Interface ISequences<TLink> | LinksPlatform's Platform.Data Library",
    "keywords": "Interface ISequences<TLink> Namespace : Platform.Data.Sequences Assembly : Platform.Data.dll Syntax public interface ISequences<TLink> Type Parameters Name Description TLink Methods | Improve this Doc View Source Count(TLink[]) Declaration ulong Count(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description UInt64 | Improve this Doc View Source Create(TLink[]) Declaration TLink Create(params TLink[] sequence) Parameters Type Name Description TLink[] sequence Returns Type Description TLink | Improve this Doc View Source Delete(TLink[]) Declaration void Delete(params TLink[] sequence) Parameters Type Name Description TLink[] sequence | Improve this Doc View Source Each(Func<TLink, Boolean>, IList<TLink>) Declaration bool Each(Func<TLink, bool> handler, IList<TLink> sequence) Parameters Type Name Description Func <TLink, Boolean > handler IList <TLink> sequence Returns Type Description Boolean | Improve this Doc View Source EachPart(Func<TLink, Boolean>, TLink) Declaration bool EachPart(Func<TLink, bool> handler, TLink sequence) Parameters Type Name Description Func <TLink, Boolean > handler TLink sequence Returns Type Description Boolean | Improve this Doc View Source Update(TLink[], TLink[]) Declaration TLink Update(TLink[] sequence, TLink[] newSequence) Parameters Type Name Description TLink[] sequence TLink[] newSequence Returns Type Description TLink"
  }
}